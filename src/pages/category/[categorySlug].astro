---
export const prerender = true
import Root from '@layouts/Root.astro'
import { getCollection } from 'astro:content'
import { safeTruncate } from '@src/utils.ts'
import { categories } from '@src/constants.ts'

export async function getStaticPaths() {
	return categories.map((category) => ({
		params: { categorySlug: category.slug },
		props: { category },
	}))
}

const { category } = Astro.props

const prompts = await getCollection('prompt')
const promptsInCategory = prompts.filter((prompt) => {
	return prompt.data.category === category.slug
})
---

<Root
	classes="space-y-24"
	title={`${promptsInCategory.length} "${category?.label.toLowerCase()}" prompts`}
	description={`Explore ${
		promptsInCategory.length
	} “${category?.label.toLowerCase()}” AI prompts. All of our prompts are 100% free and open source.`}
>
	<div class="text-center font-extrabold text-3xl text-gray-800 dark:text-gray-200">
		<h1>{promptsInCategory.length} “{category.label}” Prompts</h1>
	</div>
	<div class="bg-gray-100/70 dark:bg-gray-800 p-6 max-w-[1000px] mx-auto">
		<div class="prose prose-lg dark:prose-invert max-w-full">
			<Fragment set:html={category.overview} />
		</div>
	</div>
	<div class="max-w-[1200px] mx-auto">
		<div class="grid gap-6 grid-cols-[repeat(auto-fill,minmax(300px,2fr))]">
			{
				promptsInCategory.map((prompt) => (
					<a
						href={`/prompt/${prompt.slug}/`}
						class="bg-gray-100/70 dark:bg-gray-800 p-6 hover:ring-1 hover:ring-blue-500 dark:hover:ring-blue-300"
						rel="prefetch"
					>
						<div class="prose dark:prose-invert">
							<h3 class="leading-tight">{prompt.data.title}</h3>
							<div>{safeTruncate(prompt.data.prompt, 160)}</div>
						</div>
					</a>
				))
			}
		</div>
	</div>
</Root>
