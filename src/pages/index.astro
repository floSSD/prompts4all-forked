---
export const prerender = true
import Root from '@layouts/Root.astro'
import { getCollection } from 'astro:content'
import { safeTruncate } from '@src/utils.ts'
import { categories } from '@src/constants.ts'

const prompts = await getCollection('prompt')

function promptsCountInCategory(categorySlug: string) {
	return prompts.filter((prompt) => {
		return prompt.data.category === categorySlug
	}).length
}
---

<Root>
	<div class="mb-24 text-center font-extrabold text-3xl text-gray-800 dark:text-gray-200">
		A 100% free and growing collection of AI prompts.
	</div>
	<div class="max-w-[1200px] mx-auto">
		<div class="grid gap-6 grid-cols-[repeat(auto-fill,minmax(230px,2fr))] mb-16">
			{
				categories.map((category) => (
					<a
						href={`/category/${category.slug}/`}
						class="bg-gray-100/70 dark:bg-gray-800 p-6 hover:ring-1 hover:ring-blue-500 dark:hover:ring-blue-300 text-center"
						rel="prefetch"
					>
						<div class="prose dark:prose-invert">
							<h3 class="leading-tight">{category.label}</h3>
							<h4 class="leading-tight">({promptsCountInCategory(category.slug)} prompts)</h4>
						</div>
					</a>
				))
			}
		</div>
		<div class="grid gap-6 grid-cols-[repeat(auto-fill,minmax(300px,2fr))]">
			{
				prompts.map((prompt) => (
					<a
						href={`/prompt/${prompt.slug}/`}
						class="bg-gray-100/70 dark:bg-gray-800 p-6 hover:ring-1 hover:ring-blue-500 dark:hover:ring-blue-300"
						rel="prefetch"
					>
						<div class="prose dark:prose-invert">
							<h3 class="leading-tight">{prompt.data.title}</h3>
							<div>{safeTruncate(prompt.data.prompt, 160)}</div>
						</div>
					</a>
				))
			}
		</div>
	</div>
</Root>
